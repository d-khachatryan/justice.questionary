#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Justice.Questionary.Catalogs
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="JusticeDB2")]
	public partial class CatalogStoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCatalogD1(CatalogD1 instance);
    partial void UpdateCatalogD1(CatalogD1 instance);
    partial void DeleteCatalogD1(CatalogD1 instance);
    partial void InsertCatalogT10(CatalogT10 instance);
    partial void UpdateCatalogT10(CatalogT10 instance);
    partial void DeleteCatalogT10(CatalogT10 instance);
    partial void InsertCatalogT10_Detail(CatalogT10_Detail instance);
    partial void UpdateCatalogT10_Detail(CatalogT10_Detail instance);
    partial void DeleteCatalogT10_Detail(CatalogT10_Detail instance);
    partial void InsertCatalogT3(CatalogT3 instance);
    partial void UpdateCatalogT3(CatalogT3 instance);
    partial void DeleteCatalogT3(CatalogT3 instance);
    partial void InsertCatalogT30(CatalogT30 instance);
    partial void UpdateCatalogT30(CatalogT30 instance);
    partial void DeleteCatalogT30(CatalogT30 instance);
    partial void InsertCatalogT4(CatalogT4 instance);
    partial void UpdateCatalogT4(CatalogT4 instance);
    partial void DeleteCatalogT4(CatalogT4 instance);
    partial void InsertCatalogT5(CatalogT5 instance);
    partial void UpdateCatalogT5(CatalogT5 instance);
    partial void DeleteCatalogT5(CatalogT5 instance);
    partial void InsertCatalogT6(CatalogT6 instance);
    partial void UpdateCatalogT6(CatalogT6 instance);
    partial void DeleteCatalogT6(CatalogT6 instance);
    partial void InsertCatalogT7(CatalogT7 instance);
    partial void UpdateCatalogT7(CatalogT7 instance);
    partial void DeleteCatalogT7(CatalogT7 instance);
    partial void InsertCatalogT8(CatalogT8 instance);
    partial void UpdateCatalogT8(CatalogT8 instance);
    partial void DeleteCatalogT8(CatalogT8 instance);
    partial void InsertCatalogT9(CatalogT9 instance);
    partial void UpdateCatalogT9(CatalogT9 instance);
    partial void DeleteCatalogT9(CatalogT9 instance);
    partial void InsertCatalogX3(CatalogX3 instance);
    partial void UpdateCatalogX3(CatalogX3 instance);
    partial void DeleteCatalogX3(CatalogX3 instance);
    partial void InsertCatalogX43(CatalogX43 instance);
    partial void UpdateCatalogX43(CatalogX43 instance);
    partial void DeleteCatalogX43(CatalogX43 instance);
    partial void InsertCatalogX44(CatalogX44 instance);
    partial void UpdateCatalogX44(CatalogX44 instance);
    partial void DeleteCatalogX44(CatalogX44 instance);
    partial void InsertCatalogX45(CatalogX45 instance);
    partial void UpdateCatalogX45(CatalogX45 instance);
    partial void DeleteCatalogX45(CatalogX45 instance);
    partial void InsertCatalogX46(CatalogX46 instance);
    partial void UpdateCatalogX46(CatalogX46 instance);
    partial void DeleteCatalogX46(CatalogX46 instance);
    partial void InsertCatalogX47(CatalogX47 instance);
    partial void UpdateCatalogX47(CatalogX47 instance);
    partial void DeleteCatalogX47(CatalogX47 instance);
    partial void InsertCommunication_Type(Communication_Type instance);
    partial void UpdateCommunication_Type(Communication_Type instance);
    partial void DeleteCommunication_Type(Communication_Type instance);
    partial void InsertCourt(Court instance);
    partial void UpdateCourt(Court instance);
    partial void DeleteCourt(Court instance);
    partial void InsertDate_Interval(Date_Interval instance);
    partial void UpdateDate_Interval(Date_Interval instance);
    partial void DeleteDate_Interval(Date_Interval instance);
    partial void InsertGender(Gender instance);
    partial void UpdateGender(Gender instance);
    partial void DeleteGender(Gender instance);
    partial void InsertLawyer_Service(Lawyer_Service instance);
    partial void UpdateLawyer_Service(Lawyer_Service instance);
    partial void DeleteLawyer_Service(Lawyer_Service instance);
    partial void InsertPublic_Lawyer_Service(Public_Lawyer_Service instance);
    partial void UpdatePublic_Lawyer_Service(Public_Lawyer_Service instance);
    partial void DeletePublic_Lawyer_Service(Public_Lawyer_Service instance);
    partial void InsertPublic_Lawyer_Service_Payment(Public_Lawyer_Service_Payment instance);
    partial void UpdatePublic_Lawyer_Service_Payment(Public_Lawyer_Service_Payment instance);
    partial void DeletePublic_Lawyer_Service_Payment(Public_Lawyer_Service_Payment instance);
    partial void InsertRecord_Status(Record_Status instance);
    partial void UpdateRecord_Status(Record_Status instance);
    partial void DeleteRecord_Status(Record_Status instance);
    partial void InsertResource_Estimation_Type(Resource_Estimation_Type instance);
    partial void UpdateResource_Estimation_Type(Resource_Estimation_Type instance);
    partial void DeleteResource_Estimation_Type(Resource_Estimation_Type instance);
    partial void InsertReviewer(Reviewer instance);
    partial void UpdateReviewer(Reviewer instance);
    partial void DeleteReviewer(Reviewer instance);
    partial void InsertScan_Provision_Cost(Scan_Provision_Cost instance);
    partial void UpdateScan_Provision_Cost(Scan_Provision_Cost instance);
    partial void DeleteScan_Provision_Cost(Scan_Provision_Cost instance);
    partial void InsertScan_Provision_Type(Scan_Provision_Type instance);
    partial void UpdateScan_Provision_Type(Scan_Provision_Type instance);
    partial void DeleteScan_Provision_Type(Scan_Provision_Type instance);
    #endregion
		
		public CatalogStoreDataContext() : 
				base(global::Justice.Questionary.Catalogs.Properties.Settings.Default.JusticeDB2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogStoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogStoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogStoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogStoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CatalogD1> CatalogD1s
		{
			get
			{
				return this.GetTable<CatalogD1>();
			}
		}
		
		public System.Data.Linq.Table<CatalogT10> CatalogT10s
		{
			get
			{
				return this.GetTable<CatalogT10>();
			}
		}
		
		public System.Data.Linq.Table<CatalogT10_Detail> CatalogT10_Details
		{
			get
			{
				return this.GetTable<CatalogT10_Detail>();
			}
		}
		
		public System.Data.Linq.Table<CatalogT3> CatalogT3s
		{
			get
			{
				return this.GetTable<CatalogT3>();
			}
		}
		
		public System.Data.Linq.Table<CatalogT30> CatalogT30s
		{
			get
			{
				return this.GetTable<CatalogT30>();
			}
		}
		
		public System.Data.Linq.Table<CatalogT4> CatalogT4s
		{
			get
			{
				return this.GetTable<CatalogT4>();
			}
		}
		
		public System.Data.Linq.Table<CatalogT5> CatalogT5s
		{
			get
			{
				return this.GetTable<CatalogT5>();
			}
		}
		
		public System.Data.Linq.Table<CatalogT6> CatalogT6s
		{
			get
			{
				return this.GetTable<CatalogT6>();
			}
		}
		
		public System.Data.Linq.Table<CatalogT7> CatalogT7s
		{
			get
			{
				return this.GetTable<CatalogT7>();
			}
		}
		
		public System.Data.Linq.Table<CatalogT8> CatalogT8s
		{
			get
			{
				return this.GetTable<CatalogT8>();
			}
		}
		
		public System.Data.Linq.Table<CatalogT9> CatalogT9s
		{
			get
			{
				return this.GetTable<CatalogT9>();
			}
		}
		
		public System.Data.Linq.Table<CatalogX3> CatalogX3s
		{
			get
			{
				return this.GetTable<CatalogX3>();
			}
		}
		
		public System.Data.Linq.Table<CatalogX43> CatalogX43s
		{
			get
			{
				return this.GetTable<CatalogX43>();
			}
		}
		
		public System.Data.Linq.Table<CatalogX44> CatalogX44s
		{
			get
			{
				return this.GetTable<CatalogX44>();
			}
		}
		
		public System.Data.Linq.Table<CatalogX45> CatalogX45s
		{
			get
			{
				return this.GetTable<CatalogX45>();
			}
		}
		
		public System.Data.Linq.Table<CatalogX46> CatalogX46s
		{
			get
			{
				return this.GetTable<CatalogX46>();
			}
		}
		
		public System.Data.Linq.Table<CatalogX47> CatalogX47s
		{
			get
			{
				return this.GetTable<CatalogX47>();
			}
		}
		
		public System.Data.Linq.Table<Communication_Type> Communication_Types
		{
			get
			{
				return this.GetTable<Communication_Type>();
			}
		}
		
		public System.Data.Linq.Table<Court> Courts
		{
			get
			{
				return this.GetTable<Court>();
			}
		}
		
		public System.Data.Linq.Table<Date_Interval> Date_Intervals
		{
			get
			{
				return this.GetTable<Date_Interval>();
			}
		}
		
		public System.Data.Linq.Table<Gender> Genders
		{
			get
			{
				return this.GetTable<Gender>();
			}
		}
		
		public System.Data.Linq.Table<Lawyer_Service> Lawyer_Services
		{
			get
			{
				return this.GetTable<Lawyer_Service>();
			}
		}
		
		public System.Data.Linq.Table<Public_Lawyer_Service> Public_Lawyer_Services
		{
			get
			{
				return this.GetTable<Public_Lawyer_Service>();
			}
		}
		
		public System.Data.Linq.Table<Public_Lawyer_Service_Payment> Public_Lawyer_Service_Payments
		{
			get
			{
				return this.GetTable<Public_Lawyer_Service_Payment>();
			}
		}
		
		public System.Data.Linq.Table<Record_Status> Record_Status
		{
			get
			{
				return this.GetTable<Record_Status>();
			}
		}
		
		public System.Data.Linq.Table<Resource_Estimation_Type> Resource_Estimation_Types
		{
			get
			{
				return this.GetTable<Resource_Estimation_Type>();
			}
		}
		
		public System.Data.Linq.Table<Reviewer> Reviewers
		{
			get
			{
				return this.GetTable<Reviewer>();
			}
		}
		
		public System.Data.Linq.Table<Scan_Provision_Cost> Scan_Provision_Costs
		{
			get
			{
				return this.GetTable<Scan_Provision_Cost>();
			}
		}
		
		public System.Data.Linq.Table<Scan_Provision_Type> Scan_Provision_Types
		{
			get
			{
				return this.GetTable<Scan_Provision_Type>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogD1")]
	public partial class CatalogD1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogD1_ID;
		
		private string _CatalogD1_Name;
		
		private string _CatalogD1_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogD1_IDChanging(int value);
    partial void OnCatalogD1_IDChanged();
    partial void OnCatalogD1_NameChanging(string value);
    partial void OnCatalogD1_NameChanged();
    partial void OnCatalogD1_EN_NameChanging(string value);
    partial void OnCatalogD1_EN_NameChanged();
    #endregion
		
		public CatalogD1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogD1_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogD1_ID
		{
			get
			{
				return this._CatalogD1_ID;
			}
			set
			{
				if ((this._CatalogD1_ID != value))
				{
					this.OnCatalogD1_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogD1_ID = value;
					this.SendPropertyChanged("CatalogD1_ID");
					this.OnCatalogD1_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogD1_Name", DbType="NVarChar(50)")]
		public string CatalogD1_Name
		{
			get
			{
				return this._CatalogD1_Name;
			}
			set
			{
				if ((this._CatalogD1_Name != value))
				{
					this.OnCatalogD1_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogD1_Name = value;
					this.SendPropertyChanged("CatalogD1_Name");
					this.OnCatalogD1_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogD1_EN_Name", DbType="NVarChar(50)")]
		public string CatalogD1_EN_Name
		{
			get
			{
				return this._CatalogD1_EN_Name;
			}
			set
			{
				if ((this._CatalogD1_EN_Name != value))
				{
					this.OnCatalogD1_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogD1_EN_Name = value;
					this.SendPropertyChanged("CatalogD1_EN_Name");
					this.OnCatalogD1_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogT10")]
	public partial class CatalogT10 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogT10_ID;
		
		private string _CatalogT10_Name;
		
		private string _CatalogT10_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogT10_IDChanging(int value);
    partial void OnCatalogT10_IDChanged();
    partial void OnCatalogT10_NameChanging(string value);
    partial void OnCatalogT10_NameChanged();
    partial void OnCatalogT10_EN_NameChanging(string value);
    partial void OnCatalogT10_EN_NameChanged();
    #endregion
		
		public CatalogT10()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT10_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogT10_ID
		{
			get
			{
				return this._CatalogT10_ID;
			}
			set
			{
				if ((this._CatalogT10_ID != value))
				{
					this.OnCatalogT10_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogT10_ID = value;
					this.SendPropertyChanged("CatalogT10_ID");
					this.OnCatalogT10_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT10_Name", DbType="NVarChar(50)")]
		public string CatalogT10_Name
		{
			get
			{
				return this._CatalogT10_Name;
			}
			set
			{
				if ((this._CatalogT10_Name != value))
				{
					this.OnCatalogT10_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT10_Name = value;
					this.SendPropertyChanged("CatalogT10_Name");
					this.OnCatalogT10_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT10_EN_Name", DbType="NVarChar(50)")]
		public string CatalogT10_EN_Name
		{
			get
			{
				return this._CatalogT10_EN_Name;
			}
			set
			{
				if ((this._CatalogT10_EN_Name != value))
				{
					this.OnCatalogT10_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT10_EN_Name = value;
					this.SendPropertyChanged("CatalogT10_EN_Name");
					this.OnCatalogT10_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogT10_Detail")]
	public partial class CatalogT10_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogT10_Detail_ID;
		
		private string _CatalogT10_Detail_Name;
		
		private string _CatalogT10_Detail_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogT10_Detail_IDChanging(int value);
    partial void OnCatalogT10_Detail_IDChanged();
    partial void OnCatalogT10_Detail_NameChanging(string value);
    partial void OnCatalogT10_Detail_NameChanged();
    partial void OnCatalogT10_Detail_EN_NameChanging(string value);
    partial void OnCatalogT10_Detail_EN_NameChanged();
    #endregion
		
		public CatalogT10_Detail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT10_Detail_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogT10_Detail_ID
		{
			get
			{
				return this._CatalogT10_Detail_ID;
			}
			set
			{
				if ((this._CatalogT10_Detail_ID != value))
				{
					this.OnCatalogT10_Detail_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogT10_Detail_ID = value;
					this.SendPropertyChanged("CatalogT10_Detail_ID");
					this.OnCatalogT10_Detail_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT10_Detail_Name", DbType="NVarChar(50)")]
		public string CatalogT10_Detail_Name
		{
			get
			{
				return this._CatalogT10_Detail_Name;
			}
			set
			{
				if ((this._CatalogT10_Detail_Name != value))
				{
					this.OnCatalogT10_Detail_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT10_Detail_Name = value;
					this.SendPropertyChanged("CatalogT10_Detail_Name");
					this.OnCatalogT10_Detail_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT10_Detail_EN_Name", DbType="NVarChar(50)")]
		public string CatalogT10_Detail_EN_Name
		{
			get
			{
				return this._CatalogT10_Detail_EN_Name;
			}
			set
			{
				if ((this._CatalogT10_Detail_EN_Name != value))
				{
					this.OnCatalogT10_Detail_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT10_Detail_EN_Name = value;
					this.SendPropertyChanged("CatalogT10_Detail_EN_Name");
					this.OnCatalogT10_Detail_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogT3")]
	public partial class CatalogT3 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogT3_ID;
		
		private string _CatalogT3_Name;
		
		private string _CatalogT3_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogT3_IDChanging(int value);
    partial void OnCatalogT3_IDChanged();
    partial void OnCatalogT3_NameChanging(string value);
    partial void OnCatalogT3_NameChanged();
    partial void OnCatalogT3_EN_NameChanging(string value);
    partial void OnCatalogT3_EN_NameChanged();
    #endregion
		
		public CatalogT3()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT3_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogT3_ID
		{
			get
			{
				return this._CatalogT3_ID;
			}
			set
			{
				if ((this._CatalogT3_ID != value))
				{
					this.OnCatalogT3_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogT3_ID = value;
					this.SendPropertyChanged("CatalogT3_ID");
					this.OnCatalogT3_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT3_Name", DbType="NVarChar(50)")]
		public string CatalogT3_Name
		{
			get
			{
				return this._CatalogT3_Name;
			}
			set
			{
				if ((this._CatalogT3_Name != value))
				{
					this.OnCatalogT3_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT3_Name = value;
					this.SendPropertyChanged("CatalogT3_Name");
					this.OnCatalogT3_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT3_EN_Name", DbType="NVarChar(50)")]
		public string CatalogT3_EN_Name
		{
			get
			{
				return this._CatalogT3_EN_Name;
			}
			set
			{
				if ((this._CatalogT3_EN_Name != value))
				{
					this.OnCatalogT3_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT3_EN_Name = value;
					this.SendPropertyChanged("CatalogT3_EN_Name");
					this.OnCatalogT3_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogT30")]
	public partial class CatalogT30 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogT30_ID;
		
		private string _CatalogT30_Name;
		
		private string _CatalogT30_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogT30_IDChanging(int value);
    partial void OnCatalogT30_IDChanged();
    partial void OnCatalogT30_NameChanging(string value);
    partial void OnCatalogT30_NameChanged();
    partial void OnCatalogT30_EN_NameChanging(string value);
    partial void OnCatalogT30_EN_NameChanged();
    #endregion
		
		public CatalogT30()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT30_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogT30_ID
		{
			get
			{
				return this._CatalogT30_ID;
			}
			set
			{
				if ((this._CatalogT30_ID != value))
				{
					this.OnCatalogT30_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogT30_ID = value;
					this.SendPropertyChanged("CatalogT30_ID");
					this.OnCatalogT30_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT30_Name", DbType="NVarChar(50)")]
		public string CatalogT30_Name
		{
			get
			{
				return this._CatalogT30_Name;
			}
			set
			{
				if ((this._CatalogT30_Name != value))
				{
					this.OnCatalogT30_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT30_Name = value;
					this.SendPropertyChanged("CatalogT30_Name");
					this.OnCatalogT30_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT30_EN_Name", DbType="NVarChar(50)")]
		public string CatalogT30_EN_Name
		{
			get
			{
				return this._CatalogT30_EN_Name;
			}
			set
			{
				if ((this._CatalogT30_EN_Name != value))
				{
					this.OnCatalogT30_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT30_EN_Name = value;
					this.SendPropertyChanged("CatalogT30_EN_Name");
					this.OnCatalogT30_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogT4")]
	public partial class CatalogT4 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogT4_ID;
		
		private string _CatalogT4_Name;
		
		private string _CatalogT4_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogT4_IDChanging(int value);
    partial void OnCatalogT4_IDChanged();
    partial void OnCatalogT4_NameChanging(string value);
    partial void OnCatalogT4_NameChanged();
    partial void OnCatalogT4_EN_NameChanging(string value);
    partial void OnCatalogT4_EN_NameChanged();
    #endregion
		
		public CatalogT4()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT4_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogT4_ID
		{
			get
			{
				return this._CatalogT4_ID;
			}
			set
			{
				if ((this._CatalogT4_ID != value))
				{
					this.OnCatalogT4_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogT4_ID = value;
					this.SendPropertyChanged("CatalogT4_ID");
					this.OnCatalogT4_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT4_Name", DbType="NVarChar(50)")]
		public string CatalogT4_Name
		{
			get
			{
				return this._CatalogT4_Name;
			}
			set
			{
				if ((this._CatalogT4_Name != value))
				{
					this.OnCatalogT4_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT4_Name = value;
					this.SendPropertyChanged("CatalogT4_Name");
					this.OnCatalogT4_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT4_EN_Name", DbType="NVarChar(50)")]
		public string CatalogT4_EN_Name
		{
			get
			{
				return this._CatalogT4_EN_Name;
			}
			set
			{
				if ((this._CatalogT4_EN_Name != value))
				{
					this.OnCatalogT4_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT4_EN_Name = value;
					this.SendPropertyChanged("CatalogT4_EN_Name");
					this.OnCatalogT4_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogT5")]
	public partial class CatalogT5 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogT5_ID;
		
		private string _CatalogT5_Name;
		
		private string _CatalogT5_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogT5_IDChanging(int value);
    partial void OnCatalogT5_IDChanged();
    partial void OnCatalogT5_NameChanging(string value);
    partial void OnCatalogT5_NameChanged();
    partial void OnCatalogT5_EN_NameChanging(string value);
    partial void OnCatalogT5_EN_NameChanged();
    #endregion
		
		public CatalogT5()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT5_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogT5_ID
		{
			get
			{
				return this._CatalogT5_ID;
			}
			set
			{
				if ((this._CatalogT5_ID != value))
				{
					this.OnCatalogT5_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogT5_ID = value;
					this.SendPropertyChanged("CatalogT5_ID");
					this.OnCatalogT5_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT5_Name", DbType="NVarChar(50)")]
		public string CatalogT5_Name
		{
			get
			{
				return this._CatalogT5_Name;
			}
			set
			{
				if ((this._CatalogT5_Name != value))
				{
					this.OnCatalogT5_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT5_Name = value;
					this.SendPropertyChanged("CatalogT5_Name");
					this.OnCatalogT5_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT5_EN_Name", DbType="NVarChar(50)")]
		public string CatalogT5_EN_Name
		{
			get
			{
				return this._CatalogT5_EN_Name;
			}
			set
			{
				if ((this._CatalogT5_EN_Name != value))
				{
					this.OnCatalogT5_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT5_EN_Name = value;
					this.SendPropertyChanged("CatalogT5_EN_Name");
					this.OnCatalogT5_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogT6")]
	public partial class CatalogT6 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogT6_ID;
		
		private string _CatalogT6_Name;
		
		private string _CatalogT6_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogT6_IDChanging(int value);
    partial void OnCatalogT6_IDChanged();
    partial void OnCatalogT6_NameChanging(string value);
    partial void OnCatalogT6_NameChanged();
    partial void OnCatalogT6_EN_NameChanging(string value);
    partial void OnCatalogT6_EN_NameChanged();
    #endregion
		
		public CatalogT6()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT6_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogT6_ID
		{
			get
			{
				return this._CatalogT6_ID;
			}
			set
			{
				if ((this._CatalogT6_ID != value))
				{
					this.OnCatalogT6_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogT6_ID = value;
					this.SendPropertyChanged("CatalogT6_ID");
					this.OnCatalogT6_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT6_Name", DbType="NVarChar(50)")]
		public string CatalogT6_Name
		{
			get
			{
				return this._CatalogT6_Name;
			}
			set
			{
				if ((this._CatalogT6_Name != value))
				{
					this.OnCatalogT6_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT6_Name = value;
					this.SendPropertyChanged("CatalogT6_Name");
					this.OnCatalogT6_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT6_EN_Name", DbType="NVarChar(50)")]
		public string CatalogT6_EN_Name
		{
			get
			{
				return this._CatalogT6_EN_Name;
			}
			set
			{
				if ((this._CatalogT6_EN_Name != value))
				{
					this.OnCatalogT6_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT6_EN_Name = value;
					this.SendPropertyChanged("CatalogT6_EN_Name");
					this.OnCatalogT6_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogT7")]
	public partial class CatalogT7 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogT7_ID;
		
		private string _CatalogT7_Name;
		
		private string _CatalogT7_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogT7_IDChanging(int value);
    partial void OnCatalogT7_IDChanged();
    partial void OnCatalogT7_NameChanging(string value);
    partial void OnCatalogT7_NameChanged();
    partial void OnCatalogT7_EN_NameChanging(string value);
    partial void OnCatalogT7_EN_NameChanged();
    #endregion
		
		public CatalogT7()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT7_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogT7_ID
		{
			get
			{
				return this._CatalogT7_ID;
			}
			set
			{
				if ((this._CatalogT7_ID != value))
				{
					this.OnCatalogT7_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogT7_ID = value;
					this.SendPropertyChanged("CatalogT7_ID");
					this.OnCatalogT7_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT7_Name", DbType="NVarChar(50)")]
		public string CatalogT7_Name
		{
			get
			{
				return this._CatalogT7_Name;
			}
			set
			{
				if ((this._CatalogT7_Name != value))
				{
					this.OnCatalogT7_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT7_Name = value;
					this.SendPropertyChanged("CatalogT7_Name");
					this.OnCatalogT7_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT7_EN_Name", DbType="NVarChar(50)")]
		public string CatalogT7_EN_Name
		{
			get
			{
				return this._CatalogT7_EN_Name;
			}
			set
			{
				if ((this._CatalogT7_EN_Name != value))
				{
					this.OnCatalogT7_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT7_EN_Name = value;
					this.SendPropertyChanged("CatalogT7_EN_Name");
					this.OnCatalogT7_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogT8")]
	public partial class CatalogT8 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogT8_ID;
		
		private string _CatalogT8_Name;
		
		private string _CatalogT8_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogT8_IDChanging(int value);
    partial void OnCatalogT8_IDChanged();
    partial void OnCatalogT8_NameChanging(string value);
    partial void OnCatalogT8_NameChanged();
    partial void OnCatalogT8_EN_NameChanging(string value);
    partial void OnCatalogT8_EN_NameChanged();
    #endregion
		
		public CatalogT8()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT8_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogT8_ID
		{
			get
			{
				return this._CatalogT8_ID;
			}
			set
			{
				if ((this._CatalogT8_ID != value))
				{
					this.OnCatalogT8_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogT8_ID = value;
					this.SendPropertyChanged("CatalogT8_ID");
					this.OnCatalogT8_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT8_Name", DbType="NVarChar(50)")]
		public string CatalogT8_Name
		{
			get
			{
				return this._CatalogT8_Name;
			}
			set
			{
				if ((this._CatalogT8_Name != value))
				{
					this.OnCatalogT8_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT8_Name = value;
					this.SendPropertyChanged("CatalogT8_Name");
					this.OnCatalogT8_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT8_EN_Name", DbType="NVarChar(50)")]
		public string CatalogT8_EN_Name
		{
			get
			{
				return this._CatalogT8_EN_Name;
			}
			set
			{
				if ((this._CatalogT8_EN_Name != value))
				{
					this.OnCatalogT8_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT8_EN_Name = value;
					this.SendPropertyChanged("CatalogT8_EN_Name");
					this.OnCatalogT8_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogT9")]
	public partial class CatalogT9 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogT9_ID;
		
		private string _CatalogT9_Name;
		
		private string _CatalogT9_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogT9_IDChanging(int value);
    partial void OnCatalogT9_IDChanged();
    partial void OnCatalogT9_NameChanging(string value);
    partial void OnCatalogT9_NameChanged();
    partial void OnCatalogT9_EN_NameChanging(string value);
    partial void OnCatalogT9_EN_NameChanged();
    #endregion
		
		public CatalogT9()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT9_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogT9_ID
		{
			get
			{
				return this._CatalogT9_ID;
			}
			set
			{
				if ((this._CatalogT9_ID != value))
				{
					this.OnCatalogT9_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogT9_ID = value;
					this.SendPropertyChanged("CatalogT9_ID");
					this.OnCatalogT9_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT9_Name", DbType="NVarChar(50)")]
		public string CatalogT9_Name
		{
			get
			{
				return this._CatalogT9_Name;
			}
			set
			{
				if ((this._CatalogT9_Name != value))
				{
					this.OnCatalogT9_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT9_Name = value;
					this.SendPropertyChanged("CatalogT9_Name");
					this.OnCatalogT9_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogT9_EN_Name", DbType="NVarChar(50)")]
		public string CatalogT9_EN_Name
		{
			get
			{
				return this._CatalogT9_EN_Name;
			}
			set
			{
				if ((this._CatalogT9_EN_Name != value))
				{
					this.OnCatalogT9_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogT9_EN_Name = value;
					this.SendPropertyChanged("CatalogT9_EN_Name");
					this.OnCatalogT9_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogX3")]
	public partial class CatalogX3 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogX3_ID;
		
		private string _CatalogX3_Name;
		
		private string _CatalogX3_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogX3_IDChanging(int value);
    partial void OnCatalogX3_IDChanged();
    partial void OnCatalogX3_NameChanging(string value);
    partial void OnCatalogX3_NameChanged();
    partial void OnCatalogX3_EN_NameChanging(string value);
    partial void OnCatalogX3_EN_NameChanged();
    #endregion
		
		public CatalogX3()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX3_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogX3_ID
		{
			get
			{
				return this._CatalogX3_ID;
			}
			set
			{
				if ((this._CatalogX3_ID != value))
				{
					this.OnCatalogX3_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogX3_ID = value;
					this.SendPropertyChanged("CatalogX3_ID");
					this.OnCatalogX3_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX3_Name", DbType="NVarChar(50)")]
		public string CatalogX3_Name
		{
			get
			{
				return this._CatalogX3_Name;
			}
			set
			{
				if ((this._CatalogX3_Name != value))
				{
					this.OnCatalogX3_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX3_Name = value;
					this.SendPropertyChanged("CatalogX3_Name");
					this.OnCatalogX3_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX3_EN_Name", DbType="NVarChar(50)")]
		public string CatalogX3_EN_Name
		{
			get
			{
				return this._CatalogX3_EN_Name;
			}
			set
			{
				if ((this._CatalogX3_EN_Name != value))
				{
					this.OnCatalogX3_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX3_EN_Name = value;
					this.SendPropertyChanged("CatalogX3_EN_Name");
					this.OnCatalogX3_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogX43")]
	public partial class CatalogX43 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogX43_ID;
		
		private string _CatalogX43_Name;
		
		private string _CatalogX43_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogX43_IDChanging(int value);
    partial void OnCatalogX43_IDChanged();
    partial void OnCatalogX43_NameChanging(string value);
    partial void OnCatalogX43_NameChanged();
    partial void OnCatalogX43_EN_NameChanging(string value);
    partial void OnCatalogX43_EN_NameChanged();
    #endregion
		
		public CatalogX43()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX43_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogX43_ID
		{
			get
			{
				return this._CatalogX43_ID;
			}
			set
			{
				if ((this._CatalogX43_ID != value))
				{
					this.OnCatalogX43_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogX43_ID = value;
					this.SendPropertyChanged("CatalogX43_ID");
					this.OnCatalogX43_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX43_Name", DbType="NVarChar(50)")]
		public string CatalogX43_Name
		{
			get
			{
				return this._CatalogX43_Name;
			}
			set
			{
				if ((this._CatalogX43_Name != value))
				{
					this.OnCatalogX43_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX43_Name = value;
					this.SendPropertyChanged("CatalogX43_Name");
					this.OnCatalogX43_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX43_EN_Name", DbType="NVarChar(50)")]
		public string CatalogX43_EN_Name
		{
			get
			{
				return this._CatalogX43_EN_Name;
			}
			set
			{
				if ((this._CatalogX43_EN_Name != value))
				{
					this.OnCatalogX43_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX43_EN_Name = value;
					this.SendPropertyChanged("CatalogX43_EN_Name");
					this.OnCatalogX43_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogX44")]
	public partial class CatalogX44 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogX44_ID;
		
		private string _CatalogX44_Name;
		
		private string _CatalogX44_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogX44_IDChanging(int value);
    partial void OnCatalogX44_IDChanged();
    partial void OnCatalogX44_NameChanging(string value);
    partial void OnCatalogX44_NameChanged();
    partial void OnCatalogX44_EN_NameChanging(string value);
    partial void OnCatalogX44_EN_NameChanged();
    #endregion
		
		public CatalogX44()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX44_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogX44_ID
		{
			get
			{
				return this._CatalogX44_ID;
			}
			set
			{
				if ((this._CatalogX44_ID != value))
				{
					this.OnCatalogX44_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogX44_ID = value;
					this.SendPropertyChanged("CatalogX44_ID");
					this.OnCatalogX44_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX44_Name", DbType="NVarChar(50)")]
		public string CatalogX44_Name
		{
			get
			{
				return this._CatalogX44_Name;
			}
			set
			{
				if ((this._CatalogX44_Name != value))
				{
					this.OnCatalogX44_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX44_Name = value;
					this.SendPropertyChanged("CatalogX44_Name");
					this.OnCatalogX44_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX44_EN_Name", DbType="NVarChar(50)")]
		public string CatalogX44_EN_Name
		{
			get
			{
				return this._CatalogX44_EN_Name;
			}
			set
			{
				if ((this._CatalogX44_EN_Name != value))
				{
					this.OnCatalogX44_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX44_EN_Name = value;
					this.SendPropertyChanged("CatalogX44_EN_Name");
					this.OnCatalogX44_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogX45")]
	public partial class CatalogX45 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogX45_ID;
		
		private string _CatalogX45_Name;
		
		private string _CatalogX45_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogX45_IDChanging(int value);
    partial void OnCatalogX45_IDChanged();
    partial void OnCatalogX45_NameChanging(string value);
    partial void OnCatalogX45_NameChanged();
    partial void OnCatalogX45_EN_NameChanging(string value);
    partial void OnCatalogX45_EN_NameChanged();
    #endregion
		
		public CatalogX45()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX45_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogX45_ID
		{
			get
			{
				return this._CatalogX45_ID;
			}
			set
			{
				if ((this._CatalogX45_ID != value))
				{
					this.OnCatalogX45_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogX45_ID = value;
					this.SendPropertyChanged("CatalogX45_ID");
					this.OnCatalogX45_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX45_Name", DbType="NVarChar(50)")]
		public string CatalogX45_Name
		{
			get
			{
				return this._CatalogX45_Name;
			}
			set
			{
				if ((this._CatalogX45_Name != value))
				{
					this.OnCatalogX45_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX45_Name = value;
					this.SendPropertyChanged("CatalogX45_Name");
					this.OnCatalogX45_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX45_EN_Name", DbType="NVarChar(50)")]
		public string CatalogX45_EN_Name
		{
			get
			{
				return this._CatalogX45_EN_Name;
			}
			set
			{
				if ((this._CatalogX45_EN_Name != value))
				{
					this.OnCatalogX45_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX45_EN_Name = value;
					this.SendPropertyChanged("CatalogX45_EN_Name");
					this.OnCatalogX45_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogX46")]
	public partial class CatalogX46 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogX46_ID;
		
		private string _CatalogX46_Name;
		
		private string _CatalogX46_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogX46_IDChanging(int value);
    partial void OnCatalogX46_IDChanged();
    partial void OnCatalogX46_NameChanging(string value);
    partial void OnCatalogX46_NameChanged();
    partial void OnCatalogX46_EN_NameChanging(string value);
    partial void OnCatalogX46_EN_NameChanged();
    #endregion
		
		public CatalogX46()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX46_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogX46_ID
		{
			get
			{
				return this._CatalogX46_ID;
			}
			set
			{
				if ((this._CatalogX46_ID != value))
				{
					this.OnCatalogX46_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogX46_ID = value;
					this.SendPropertyChanged("CatalogX46_ID");
					this.OnCatalogX46_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX46_Name", DbType="NVarChar(50)")]
		public string CatalogX46_Name
		{
			get
			{
				return this._CatalogX46_Name;
			}
			set
			{
				if ((this._CatalogX46_Name != value))
				{
					this.OnCatalogX46_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX46_Name = value;
					this.SendPropertyChanged("CatalogX46_Name");
					this.OnCatalogX46_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX46_EN_Name", DbType="NVarChar(50)")]
		public string CatalogX46_EN_Name
		{
			get
			{
				return this._CatalogX46_EN_Name;
			}
			set
			{
				if ((this._CatalogX46_EN_Name != value))
				{
					this.OnCatalogX46_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX46_EN_Name = value;
					this.SendPropertyChanged("CatalogX46_EN_Name");
					this.OnCatalogX46_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogX47")]
	public partial class CatalogX47 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatalogX47_ID;
		
		private string _CatalogX47_Name;
		
		private string _CatalogX47_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatalogX47_IDChanging(int value);
    partial void OnCatalogX47_IDChanged();
    partial void OnCatalogX47_NameChanging(string value);
    partial void OnCatalogX47_NameChanged();
    partial void OnCatalogX47_EN_NameChanging(string value);
    partial void OnCatalogX47_EN_NameChanged();
    #endregion
		
		public CatalogX47()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX47_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatalogX47_ID
		{
			get
			{
				return this._CatalogX47_ID;
			}
			set
			{
				if ((this._CatalogX47_ID != value))
				{
					this.OnCatalogX47_IDChanging(value);
					this.SendPropertyChanging();
					this._CatalogX47_ID = value;
					this.SendPropertyChanged("CatalogX47_ID");
					this.OnCatalogX47_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX47_Name", DbType="NVarChar(50)")]
		public string CatalogX47_Name
		{
			get
			{
				return this._CatalogX47_Name;
			}
			set
			{
				if ((this._CatalogX47_Name != value))
				{
					this.OnCatalogX47_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX47_Name = value;
					this.SendPropertyChanged("CatalogX47_Name");
					this.OnCatalogX47_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogX47_EN_Name", DbType="NVarChar(50)")]
		public string CatalogX47_EN_Name
		{
			get
			{
				return this._CatalogX47_EN_Name;
			}
			set
			{
				if ((this._CatalogX47_EN_Name != value))
				{
					this.OnCatalogX47_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._CatalogX47_EN_Name = value;
					this.SendPropertyChanged("CatalogX47_EN_Name");
					this.OnCatalogX47_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Communication_Type")]
	public partial class Communication_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Communication_Type_ID;
		
		private string _Communication_Type_Name;
		
		private string _Communication_Type_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommunication_Type_IDChanging(int value);
    partial void OnCommunication_Type_IDChanged();
    partial void OnCommunication_Type_NameChanging(string value);
    partial void OnCommunication_Type_NameChanged();
    partial void OnCommunication_Type_EN_NameChanging(string value);
    partial void OnCommunication_Type_EN_NameChanged();
    #endregion
		
		public Communication_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Communication_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Communication_Type_ID
		{
			get
			{
				return this._Communication_Type_ID;
			}
			set
			{
				if ((this._Communication_Type_ID != value))
				{
					this.OnCommunication_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Communication_Type_ID = value;
					this.SendPropertyChanged("Communication_Type_ID");
					this.OnCommunication_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Communication_Type_Name", DbType="NVarChar(50)")]
		public string Communication_Type_Name
		{
			get
			{
				return this._Communication_Type_Name;
			}
			set
			{
				if ((this._Communication_Type_Name != value))
				{
					this.OnCommunication_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Communication_Type_Name = value;
					this.SendPropertyChanged("Communication_Type_Name");
					this.OnCommunication_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Communication_Type_EN_Name", DbType="NVarChar(50)")]
		public string Communication_Type_EN_Name
		{
			get
			{
				return this._Communication_Type_EN_Name;
			}
			set
			{
				if ((this._Communication_Type_EN_Name != value))
				{
					this.OnCommunication_Type_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Communication_Type_EN_Name = value;
					this.SendPropertyChanged("Communication_Type_EN_Name");
					this.OnCommunication_Type_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Court")]
	public partial class Court : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Court_ID;
		
		private string _Court_Name;
		
		private string _Court_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourt_IDChanging(int value);
    partial void OnCourt_IDChanged();
    partial void OnCourt_NameChanging(string value);
    partial void OnCourt_NameChanged();
    partial void OnCourt_EN_NameChanging(string value);
    partial void OnCourt_EN_NameChanged();
    #endregion
		
		public Court()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Court_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Court_ID
		{
			get
			{
				return this._Court_ID;
			}
			set
			{
				if ((this._Court_ID != value))
				{
					this.OnCourt_IDChanging(value);
					this.SendPropertyChanging();
					this._Court_ID = value;
					this.SendPropertyChanged("Court_ID");
					this.OnCourt_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Court_Name", DbType="NVarChar(350)")]
		public string Court_Name
		{
			get
			{
				return this._Court_Name;
			}
			set
			{
				if ((this._Court_Name != value))
				{
					this.OnCourt_NameChanging(value);
					this.SendPropertyChanging();
					this._Court_Name = value;
					this.SendPropertyChanged("Court_Name");
					this.OnCourt_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Court_EN_Name", DbType="NVarChar(350)")]
		public string Court_EN_Name
		{
			get
			{
				return this._Court_EN_Name;
			}
			set
			{
				if ((this._Court_EN_Name != value))
				{
					this.OnCourt_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Court_EN_Name = value;
					this.SendPropertyChanged("Court_EN_Name");
					this.OnCourt_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Date_Interval")]
	public partial class Date_Interval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Date_Interval_ID;
		
		private string _Date_Interval_Name;
		
		private string _Date_Interval_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDate_Interval_IDChanging(int value);
    partial void OnDate_Interval_IDChanged();
    partial void OnDate_Interval_NameChanging(string value);
    partial void OnDate_Interval_NameChanged();
    partial void OnDate_Interval_EN_NameChanging(string value);
    partial void OnDate_Interval_EN_NameChanged();
    #endregion
		
		public Date_Interval()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Interval_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Date_Interval_ID
		{
			get
			{
				return this._Date_Interval_ID;
			}
			set
			{
				if ((this._Date_Interval_ID != value))
				{
					this.OnDate_Interval_IDChanging(value);
					this.SendPropertyChanging();
					this._Date_Interval_ID = value;
					this.SendPropertyChanged("Date_Interval_ID");
					this.OnDate_Interval_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Interval_Name", DbType="NVarChar(50)")]
		public string Date_Interval_Name
		{
			get
			{
				return this._Date_Interval_Name;
			}
			set
			{
				if ((this._Date_Interval_Name != value))
				{
					this.OnDate_Interval_NameChanging(value);
					this.SendPropertyChanging();
					this._Date_Interval_Name = value;
					this.SendPropertyChanged("Date_Interval_Name");
					this.OnDate_Interval_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Interval_EN_Name", DbType="NVarChar(50)")]
		public string Date_Interval_EN_Name
		{
			get
			{
				return this._Date_Interval_EN_Name;
			}
			set
			{
				if ((this._Date_Interval_EN_Name != value))
				{
					this.OnDate_Interval_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Date_Interval_EN_Name = value;
					this.SendPropertyChanged("Date_Interval_EN_Name");
					this.OnDate_Interval_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gender")]
	public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Gender_ID;
		
		private string _Gender_Name;
		
		private string _Gender_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGender_IDChanging(int value);
    partial void OnGender_IDChanged();
    partial void OnGender_NameChanging(string value);
    partial void OnGender_NameChanged();
    partial void OnGender_EN_NameChanging(string value);
    partial void OnGender_EN_NameChanged();
    #endregion
		
		public Gender()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Gender_ID
		{
			get
			{
				return this._Gender_ID;
			}
			set
			{
				if ((this._Gender_ID != value))
				{
					this.OnGender_IDChanging(value);
					this.SendPropertyChanging();
					this._Gender_ID = value;
					this.SendPropertyChanged("Gender_ID");
					this.OnGender_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender_Name", DbType="NVarChar(50)")]
		public string Gender_Name
		{
			get
			{
				return this._Gender_Name;
			}
			set
			{
				if ((this._Gender_Name != value))
				{
					this.OnGender_NameChanging(value);
					this.SendPropertyChanging();
					this._Gender_Name = value;
					this.SendPropertyChanged("Gender_Name");
					this.OnGender_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender_EN_Name", DbType="NVarChar(50)")]
		public string Gender_EN_Name
		{
			get
			{
				return this._Gender_EN_Name;
			}
			set
			{
				if ((this._Gender_EN_Name != value))
				{
					this.OnGender_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Gender_EN_Name = value;
					this.SendPropertyChanged("Gender_EN_Name");
					this.OnGender_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lawyer_Service")]
	public partial class Lawyer_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Lawyer_Service_ID;
		
		private string _Lawyer_Service_Name;
		
		private string _Lawyer_Service_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLawyer_Service_IDChanging(int value);
    partial void OnLawyer_Service_IDChanged();
    partial void OnLawyer_Service_NameChanging(string value);
    partial void OnLawyer_Service_NameChanged();
    partial void OnLawyer_Service_EN_NameChanging(string value);
    partial void OnLawyer_Service_EN_NameChanged();
    #endregion
		
		public Lawyer_Service()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lawyer_Service_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Lawyer_Service_ID
		{
			get
			{
				return this._Lawyer_Service_ID;
			}
			set
			{
				if ((this._Lawyer_Service_ID != value))
				{
					this.OnLawyer_Service_IDChanging(value);
					this.SendPropertyChanging();
					this._Lawyer_Service_ID = value;
					this.SendPropertyChanged("Lawyer_Service_ID");
					this.OnLawyer_Service_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lawyer_Service_Name", DbType="NVarChar(50)")]
		public string Lawyer_Service_Name
		{
			get
			{
				return this._Lawyer_Service_Name;
			}
			set
			{
				if ((this._Lawyer_Service_Name != value))
				{
					this.OnLawyer_Service_NameChanging(value);
					this.SendPropertyChanging();
					this._Lawyer_Service_Name = value;
					this.SendPropertyChanged("Lawyer_Service_Name");
					this.OnLawyer_Service_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lawyer_Service_EN_Name", DbType="NVarChar(50)")]
		public string Lawyer_Service_EN_Name
		{
			get
			{
				return this._Lawyer_Service_EN_Name;
			}
			set
			{
				if ((this._Lawyer_Service_EN_Name != value))
				{
					this.OnLawyer_Service_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Lawyer_Service_EN_Name = value;
					this.SendPropertyChanged("Lawyer_Service_EN_Name");
					this.OnLawyer_Service_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Public_Lawyer_Service")]
	public partial class Public_Lawyer_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Public_Lawyer_Service_ID;
		
		private string _Public_Lawyer_Service_Name;
		
		private string _Public_Lawyer_Service_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPublic_Lawyer_Service_IDChanging(int value);
    partial void OnPublic_Lawyer_Service_IDChanged();
    partial void OnPublic_Lawyer_Service_NameChanging(string value);
    partial void OnPublic_Lawyer_Service_NameChanged();
    partial void OnPublic_Lawyer_Service_EN_NameChanging(string value);
    partial void OnPublic_Lawyer_Service_EN_NameChanged();
    #endregion
		
		public Public_Lawyer_Service()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Public_Lawyer_Service_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Public_Lawyer_Service_ID
		{
			get
			{
				return this._Public_Lawyer_Service_ID;
			}
			set
			{
				if ((this._Public_Lawyer_Service_ID != value))
				{
					this.OnPublic_Lawyer_Service_IDChanging(value);
					this.SendPropertyChanging();
					this._Public_Lawyer_Service_ID = value;
					this.SendPropertyChanged("Public_Lawyer_Service_ID");
					this.OnPublic_Lawyer_Service_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Public_Lawyer_Service_Name", DbType="NVarChar(50)")]
		public string Public_Lawyer_Service_Name
		{
			get
			{
				return this._Public_Lawyer_Service_Name;
			}
			set
			{
				if ((this._Public_Lawyer_Service_Name != value))
				{
					this.OnPublic_Lawyer_Service_NameChanging(value);
					this.SendPropertyChanging();
					this._Public_Lawyer_Service_Name = value;
					this.SendPropertyChanged("Public_Lawyer_Service_Name");
					this.OnPublic_Lawyer_Service_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Public_Lawyer_Service_EN_Name", DbType="NVarChar(50)")]
		public string Public_Lawyer_Service_EN_Name
		{
			get
			{
				return this._Public_Lawyer_Service_EN_Name;
			}
			set
			{
				if ((this._Public_Lawyer_Service_EN_Name != value))
				{
					this.OnPublic_Lawyer_Service_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Public_Lawyer_Service_EN_Name = value;
					this.SendPropertyChanged("Public_Lawyer_Service_EN_Name");
					this.OnPublic_Lawyer_Service_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Public_Lawyer_Service_Payment")]
	public partial class Public_Lawyer_Service_Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Public_Lawyer_Service_Payment_ID;
		
		private string _Public_Lawyer_Service_Payment_Name;
		
		private string _Public_Lawyer_Service_Payment_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPublic_Lawyer_Service_Payment_IDChanging(int value);
    partial void OnPublic_Lawyer_Service_Payment_IDChanged();
    partial void OnPublic_Lawyer_Service_Payment_NameChanging(string value);
    partial void OnPublic_Lawyer_Service_Payment_NameChanged();
    partial void OnPublic_Lawyer_Service_Payment_EN_NameChanging(string value);
    partial void OnPublic_Lawyer_Service_Payment_EN_NameChanged();
    #endregion
		
		public Public_Lawyer_Service_Payment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Public_Lawyer_Service_Payment_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Public_Lawyer_Service_Payment_ID
		{
			get
			{
				return this._Public_Lawyer_Service_Payment_ID;
			}
			set
			{
				if ((this._Public_Lawyer_Service_Payment_ID != value))
				{
					this.OnPublic_Lawyer_Service_Payment_IDChanging(value);
					this.SendPropertyChanging();
					this._Public_Lawyer_Service_Payment_ID = value;
					this.SendPropertyChanged("Public_Lawyer_Service_Payment_ID");
					this.OnPublic_Lawyer_Service_Payment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Public_Lawyer_Service_Payment_Name", DbType="NVarChar(50)")]
		public string Public_Lawyer_Service_Payment_Name
		{
			get
			{
				return this._Public_Lawyer_Service_Payment_Name;
			}
			set
			{
				if ((this._Public_Lawyer_Service_Payment_Name != value))
				{
					this.OnPublic_Lawyer_Service_Payment_NameChanging(value);
					this.SendPropertyChanging();
					this._Public_Lawyer_Service_Payment_Name = value;
					this.SendPropertyChanged("Public_Lawyer_Service_Payment_Name");
					this.OnPublic_Lawyer_Service_Payment_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Public_Lawyer_Service_Payment_EN_Name", DbType="NVarChar(50)")]
		public string Public_Lawyer_Service_Payment_EN_Name
		{
			get
			{
				return this._Public_Lawyer_Service_Payment_EN_Name;
			}
			set
			{
				if ((this._Public_Lawyer_Service_Payment_EN_Name != value))
				{
					this.OnPublic_Lawyer_Service_Payment_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Public_Lawyer_Service_Payment_EN_Name = value;
					this.SendPropertyChanged("Public_Lawyer_Service_Payment_EN_Name");
					this.OnPublic_Lawyer_Service_Payment_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Record_Status")]
	public partial class Record_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Record_Status_ID;
		
		private string _Record_Status_Name;
		
		private string _Record_Status_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecord_Status_IDChanging(int value);
    partial void OnRecord_Status_IDChanged();
    partial void OnRecord_Status_NameChanging(string value);
    partial void OnRecord_Status_NameChanged();
    partial void OnRecord_Status_EN_NameChanging(string value);
    partial void OnRecord_Status_EN_NameChanged();
    #endregion
		
		public Record_Status()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record_Status_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Record_Status_ID
		{
			get
			{
				return this._Record_Status_ID;
			}
			set
			{
				if ((this._Record_Status_ID != value))
				{
					this.OnRecord_Status_IDChanging(value);
					this.SendPropertyChanging();
					this._Record_Status_ID = value;
					this.SendPropertyChanged("Record_Status_ID");
					this.OnRecord_Status_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record_Status_Name", DbType="NVarChar(50)")]
		public string Record_Status_Name
		{
			get
			{
				return this._Record_Status_Name;
			}
			set
			{
				if ((this._Record_Status_Name != value))
				{
					this.OnRecord_Status_NameChanging(value);
					this.SendPropertyChanging();
					this._Record_Status_Name = value;
					this.SendPropertyChanged("Record_Status_Name");
					this.OnRecord_Status_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Record_Status_EN_Name", DbType="NVarChar(50)")]
		public string Record_Status_EN_Name
		{
			get
			{
				return this._Record_Status_EN_Name;
			}
			set
			{
				if ((this._Record_Status_EN_Name != value))
				{
					this.OnRecord_Status_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Record_Status_EN_Name = value;
					this.SendPropertyChanged("Record_Status_EN_Name");
					this.OnRecord_Status_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource_Estimation_Type")]
	public partial class Resource_Estimation_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Resource_Estimation_Type_ID;
		
		private string _Resource_Estimation_Type_Name;
		
		private string _Resource_Estimation_Type_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResource_Estimation_Type_IDChanging(int value);
    partial void OnResource_Estimation_Type_IDChanged();
    partial void OnResource_Estimation_Type_NameChanging(string value);
    partial void OnResource_Estimation_Type_NameChanged();
    partial void OnResource_Estimation_Type_EN_NameChanging(string value);
    partial void OnResource_Estimation_Type_EN_NameChanged();
    #endregion
		
		public Resource_Estimation_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_Estimation_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Resource_Estimation_Type_ID
		{
			get
			{
				return this._Resource_Estimation_Type_ID;
			}
			set
			{
				if ((this._Resource_Estimation_Type_ID != value))
				{
					this.OnResource_Estimation_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Resource_Estimation_Type_ID = value;
					this.SendPropertyChanged("Resource_Estimation_Type_ID");
					this.OnResource_Estimation_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_Estimation_Type_Name", DbType="NVarChar(50)")]
		public string Resource_Estimation_Type_Name
		{
			get
			{
				return this._Resource_Estimation_Type_Name;
			}
			set
			{
				if ((this._Resource_Estimation_Type_Name != value))
				{
					this.OnResource_Estimation_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Resource_Estimation_Type_Name = value;
					this.SendPropertyChanged("Resource_Estimation_Type_Name");
					this.OnResource_Estimation_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_Estimation_Type_EN_Name", DbType="NVarChar(50)")]
		public string Resource_Estimation_Type_EN_Name
		{
			get
			{
				return this._Resource_Estimation_Type_EN_Name;
			}
			set
			{
				if ((this._Resource_Estimation_Type_EN_Name != value))
				{
					this.OnResource_Estimation_Type_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Resource_Estimation_Type_EN_Name = value;
					this.SendPropertyChanged("Resource_Estimation_Type_EN_Name");
					this.OnResource_Estimation_Type_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reviewer")]
	public partial class Reviewer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Reviewer_ID;
		
		private string _Reviewer_Name;
		
		private string _Reviewer_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReviewer_IDChanging(int value);
    partial void OnReviewer_IDChanged();
    partial void OnReviewer_NameChanging(string value);
    partial void OnReviewer_NameChanged();
    partial void OnReviewer_EN_NameChanging(string value);
    partial void OnReviewer_EN_NameChanged();
    #endregion
		
		public Reviewer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviewer_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Reviewer_ID
		{
			get
			{
				return this._Reviewer_ID;
			}
			set
			{
				if ((this._Reviewer_ID != value))
				{
					this.OnReviewer_IDChanging(value);
					this.SendPropertyChanging();
					this._Reviewer_ID = value;
					this.SendPropertyChanged("Reviewer_ID");
					this.OnReviewer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviewer_Name", DbType="NVarChar(50)")]
		public string Reviewer_Name
		{
			get
			{
				return this._Reviewer_Name;
			}
			set
			{
				if ((this._Reviewer_Name != value))
				{
					this.OnReviewer_NameChanging(value);
					this.SendPropertyChanging();
					this._Reviewer_Name = value;
					this.SendPropertyChanged("Reviewer_Name");
					this.OnReviewer_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviewer_EN_Name", DbType="NVarChar(50)")]
		public string Reviewer_EN_Name
		{
			get
			{
				return this._Reviewer_EN_Name;
			}
			set
			{
				if ((this._Reviewer_EN_Name != value))
				{
					this.OnReviewer_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Reviewer_EN_Name = value;
					this.SendPropertyChanged("Reviewer_EN_Name");
					this.OnReviewer_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scan_Provision_Cost")]
	public partial class Scan_Provision_Cost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Scan_Provision_Cost_ID;
		
		private string _Scan_Provision_Cost_Name;
		
		private string _Scan_Provision_Cost_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScan_Provision_Cost_IDChanging(int value);
    partial void OnScan_Provision_Cost_IDChanged();
    partial void OnScan_Provision_Cost_NameChanging(string value);
    partial void OnScan_Provision_Cost_NameChanged();
    partial void OnScan_Provision_Cost_EN_NameChanging(string value);
    partial void OnScan_Provision_Cost_EN_NameChanged();
    #endregion
		
		public Scan_Provision_Cost()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scan_Provision_Cost_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Scan_Provision_Cost_ID
		{
			get
			{
				return this._Scan_Provision_Cost_ID;
			}
			set
			{
				if ((this._Scan_Provision_Cost_ID != value))
				{
					this.OnScan_Provision_Cost_IDChanging(value);
					this.SendPropertyChanging();
					this._Scan_Provision_Cost_ID = value;
					this.SendPropertyChanged("Scan_Provision_Cost_ID");
					this.OnScan_Provision_Cost_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scan_Provision_Cost_Name", DbType="NVarChar(50)")]
		public string Scan_Provision_Cost_Name
		{
			get
			{
				return this._Scan_Provision_Cost_Name;
			}
			set
			{
				if ((this._Scan_Provision_Cost_Name != value))
				{
					this.OnScan_Provision_Cost_NameChanging(value);
					this.SendPropertyChanging();
					this._Scan_Provision_Cost_Name = value;
					this.SendPropertyChanged("Scan_Provision_Cost_Name");
					this.OnScan_Provision_Cost_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scan_Provision_Cost_EN_Name", DbType="NVarChar(50)")]
		public string Scan_Provision_Cost_EN_Name
		{
			get
			{
				return this._Scan_Provision_Cost_EN_Name;
			}
			set
			{
				if ((this._Scan_Provision_Cost_EN_Name != value))
				{
					this.OnScan_Provision_Cost_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Scan_Provision_Cost_EN_Name = value;
					this.SendPropertyChanged("Scan_Provision_Cost_EN_Name");
					this.OnScan_Provision_Cost_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scan_Provision_Type")]
	public partial class Scan_Provision_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Scan_Provision_Type_ID;
		
		private string _Scan_Provision_Type_Name;
		
		private string _Scan_Provision_Type_EN_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScan_Provision_Type_IDChanging(int value);
    partial void OnScan_Provision_Type_IDChanged();
    partial void OnScan_Provision_Type_NameChanging(string value);
    partial void OnScan_Provision_Type_NameChanged();
    partial void OnScan_Provision_Type_EN_NameChanging(string value);
    partial void OnScan_Provision_Type_EN_NameChanged();
    #endregion
		
		public Scan_Provision_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scan_Provision_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Scan_Provision_Type_ID
		{
			get
			{
				return this._Scan_Provision_Type_ID;
			}
			set
			{
				if ((this._Scan_Provision_Type_ID != value))
				{
					this.OnScan_Provision_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Scan_Provision_Type_ID = value;
					this.SendPropertyChanged("Scan_Provision_Type_ID");
					this.OnScan_Provision_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scan_Provision_Type_Name", DbType="NVarChar(50)")]
		public string Scan_Provision_Type_Name
		{
			get
			{
				return this._Scan_Provision_Type_Name;
			}
			set
			{
				if ((this._Scan_Provision_Type_Name != value))
				{
					this.OnScan_Provision_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Scan_Provision_Type_Name = value;
					this.SendPropertyChanged("Scan_Provision_Type_Name");
					this.OnScan_Provision_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scan_Provision_Type_EN_Name", DbType="NVarChar(50)")]
		public string Scan_Provision_Type_EN_Name
		{
			get
			{
				return this._Scan_Provision_Type_EN_Name;
			}
			set
			{
				if ((this._Scan_Provision_Type_EN_Name != value))
				{
					this.OnScan_Provision_Type_EN_NameChanging(value);
					this.SendPropertyChanging();
					this._Scan_Provision_Type_EN_Name = value;
					this.SendPropertyChanged("Scan_Provision_Type_EN_Name");
					this.OnScan_Provision_Type_EN_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
